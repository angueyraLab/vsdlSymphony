classdef (Abstract) RetPrep < symphonyui.core.persistent.descriptions.SourceDescription
    
    methods
        
        function obj = RetPrep()
            import symphonyui.core.*;
            
            obj.addProperty('time', datestr(now), ...
                'type', PropertyType('char', 'row', 'datestr'), ...
                'description', 'Time the tissue was mounted');
            obj.addProperty('enucleatedBy', 'Angueyra', ...
                'type', PropertyType('char', 'row', {'', 'Angueyra', 'Chen', 'Kunze', 'Zhao', 'Ball', 'Li', 'Ou', 'Qiao'}), ...
                'description', 'LiLab member who performed enucleation of tissue');
            obj.addProperty('dissectedBy', 'Angueyra', ...
                'type', PropertyType('char', 'row', {'', 'Angueyra', 'Chen', 'Kunze', 'Zhao', 'Ball', 'Li', 'Ou', 'Qiao'}), ...
                'description', 'LiLab member who performed dissection of tissue');
            obj.addProperty('dissectionDate', datestr(now), ...
                'type', PropertyType('char', 'row', 'datestr'), ...
                'description', 'Time the tissue was dissected from subject');
            obj.addProperty('tissue', 'retina', ...
                'type', PropertyType('char', 'row', {'retina','organoid'}),...
                'description', 'experimental tissue');
            obj.addProperty('prep', '', ...
                'type', PropertyType('char', 'row', {'whole mount cones', 'whole mount RGCs', 'slice', 'chop', 'dissociation', 'culture', ''}), ...
                'description', 'type of preparation');
            obj.addProperty('bathSolution', '', ...
                'type', PropertyType('char', 'row', {'', 'Ringer', 'AmesBicarb', 'AmesHEPES', 'HibA'}), ...
                'description', 'The solution the tissue is bathed in during experiments');   
            obj.addProperty('storageSolution', '', ...
                'type', PropertyType('char', 'row', {'', 'Ringer', 'AmesBicarb', 'AmesHEPES', 'HibA','CustomCultureMedium'}), ...
                'description', 'The solution the tissue is stored in');
            obj.addProperty('storageTemp', '', ...
                'type', PropertyType('char', 'row', {'', 'fridge', 'room temp', 'warm', 'body temp'}), ...
                'description', 'The temperature of the solution the tissue is stored in');
            obj.addProperty('eye', '', ...
    			'type', PropertyType('char', 'row', {'', 'left', 'right'}));
            obj.addProperty('region', {}, ...
    			'type', PropertyType('cellstr', 'row', {'superior', 'inferior', 'nasal', 'temporal'}));
            obj.addProperty('virus', 'none', ...
                'type', PropertyType('char', 'row', obj.createViralMap()), ...
                'description', 'virus serotype');
            obj.addProperty('virus delivery', '', ...
    			'type', PropertyType('char', 'row', {'subretinal', 'intravitreal', ''}),...
                'description', 'method for virus delivery');
			obj.addProperty('viral transfection date', '', ...
                'type', PropertyType('char', 'row', 'datestr'), ...
                'description', 'Date virus was injected');
           
        end
        
    end
    
    methods (Static=true)
        
        function viralMap = createViralMap()
            capsids = {'AAV1','AAV2','AAV2sc','AAV2/1','AAV8','AAV8','AAV8Y733R','mAAV'};
            proteins={'CMV-eGFP','RK-eGFP','Syn-iGluSnfr','Syn-Gcamp6m','Syn-Gcamp6s','Syn-Gcamp6sRuby2'};
            
            nested_proteins=cell(1,size(capsids,2));
            for i=1:size(capsids,2)
                nested_proteins{i}=proteins;
            end
            viralMap=containers.Map(capsids,nested_proteins);

            viralMap('none')='';
        end
        
    end
    
end

